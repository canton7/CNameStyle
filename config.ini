[options]
exclude_pointer_types = const char

[Static variables must begin with s_]
kind = static_variable
rule = s_${case:camel}

[Static functions must be PascalCase]
kind = static_function
rule = ${case:pascal}

[Non-static functions must be PascalCase]
kind = global_function
rule = ${filename:stem}_${case:pascal}

[Pointer parameters and local variables must be camelCase starting with 'p']
kind = parameter:pointer, local_variable:pointer, struct_member:pointer
rule = p${case:pascal}

[Parameters and local variables must be camelCase]
kind = parameter, local_variable, struct_member
rule = ${case:camel}

[Struct and enum tags must be PascalCase ending in _tag]
kind = struct_tag, enum_tag
rule = ${filename:stem}(_${case:pascal})?_tag

[Struct and enum typedefs must be PascalCase ending in _t]
kind = struct_typedef, enum_typedef, function_pointer_typedef
rule = ${filename:stem}(_${case:pascal})?_t
